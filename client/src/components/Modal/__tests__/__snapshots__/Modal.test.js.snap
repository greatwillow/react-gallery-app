// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Modal component renders the modal correctly renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Modal
    errorMessage={
        Object {
            "errorFound": false,
            "message": "test message",
          }
    }
    handleSearchTermChange={[Function]}
    handleShowModal={[Function]}
    photo={
        Object {
            "src": Object {
              "medium": null,
            },
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="modal"
>
        <button
                className="modal-close-button"
                onClick={[Function]}
        >
                <i
                        className="fa fa-close"
                />
        </button>
        <ModalPhotoInset
                photo={
                        Object {
                                "src": Object {
                                  "medium": null,
                                },
                              }
                }
                photoSpecifiedWidth="50%"
        />
</div>,
      "className": "screen-overlay",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <button
            className="modal-close-button"
            onClick={[Function]}
>
            <i
                        className="fa fa-close"
            />
</button>,
          <ModalPhotoInset
            photo={
                        Object {
                                    "src": Object {
                                      "medium": null,
                                    },
                                  }
            }
            photoSpecifiedWidth="50%"
/>,
          false,
        ],
        "className": "modal",
      },
      "ref": [Function],
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <i
              className="fa fa-close"
/>,
            "className": "modal-close-button",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "fa fa-close",
            },
            "ref": null,
            "rendered": null,
            "type": "i",
          },
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "photo": Object {
              "src": Object {
                "medium": null,
              },
            },
            "photoSpecifiedWidth": "50%",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        false,
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="modal"
>
          <button
                    className="modal-close-button"
                    onClick={[Function]}
          >
                    <i
                              className="fa fa-close"
                    />
          </button>
          <ModalPhotoInset
                    photo={
                              Object {
                                        "src": Object {
                                          "medium": null,
                                        },
                                      }
                    }
                    photoSpecifiedWidth="50%"
          />
</div>,
        "className": "screen-overlay",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <button
              className="modal-close-button"
              onClick={[Function]}
>
              <i
                            className="fa fa-close"
              />
</button>,
            <ModalPhotoInset
              photo={
                            Object {
                                          "src": Object {
                                            "medium": null,
                                          },
                                        }
              }
              photoSpecifiedWidth="50%"
/>,
            false,
          ],
          "className": "modal",
        },
        "ref": [Function],
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <i
                className="fa fa-close"
/>,
              "className": "modal-close-button",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "fa fa-close",
              },
              "ref": null,
              "rendered": null,
              "type": "i",
            },
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "photo": Object {
                "src": Object {
                  "medium": null,
                },
              },
              "photoSpecifiedWidth": "50%",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          false,
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
